java虚拟机把内存分为 栈 堆 本地方法区 寄存器
一、栈
main函数入栈开辟一块栈内存
在函数内定义的变量叫局部变量，他们在栈中开辟内存
被调函数入栈
被调函数局部变量入栈
形参被传值
被调函数返回的值复制到主函数
被调函数return后其占用的栈内存立刻释放内存出栈
主调函数执行完了立刻释放内存出栈
总结：局部变量和语句中定义的变量是在栈中开辟内存
变量的作用域结束了就立即释放内存
二、堆
int[] nums = new int[n];
nums作为局部变量在栈中开辟内存，凡是用new的都是在堆中开辟内存
1、有默认值
2、没有引用指向的就成了辣鸡，会等待辣鸡回收线程回收辣鸡，不会立即释放内存
3、nums存放的是数组首地址
三、二维数组
如 int【2】【3】看成两个长度为3的一维数组，需要开辟三个空间，空间1存放两个一维数组的首地址，所以arr【0】存放第一个一维数组的地址
四、内存中的方法区
class  Demo2
{
	public static void main(String[] args) 
	{
		Car benchi = new Car();//奔驰存储了new Car（）在堆中开辟内存的地址

		benchi.color = "white";
		benchi.num = 4;
		benchi.run();
		System.out.println("奔驰的颜色" + benchi.color + "奔驰的轮子" + benchi.num);
	}
}
  1、因为main在Demo2.class所以类加载器加载Demo2.class到方法区
  2、原则是用到那个类就加载哪个类的字节码
  3、先加载Demo.class到方法区，然后main函数在栈中开辟内存，main函数中有个new Car（），执行到这个语句的时候，把Car.class加载到内存，然后在堆中开辟内存保存对象的成员变量，然后把这个对象的地址赋给存在栈中的实例化变量benchi，通过这个变量找到地址，给成员变量赋值，然后通过字节码调用run方法，调入到栈。

怎么去识别成员变量是哪个实例的呢？java自带this，是java定义的的一个引用变量，总是指向当前正在被使用的对象。
五、static
当执行到实例化对象的字节码的时候，先在静态方法区给静态成员变量开辟内存，此时还未实例化对象，给所有的对象使用。
